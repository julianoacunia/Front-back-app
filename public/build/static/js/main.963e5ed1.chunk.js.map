{"version":3,"sources":["redux/reducers/productReducer.js","redux/reducers/cartReducer.js","redux/reducers/loginReducer.js","redux/reducers/index.js","redux/actions/types.js","redux/store.js","redux/actions/loginActions.js","components/Login.js","redux/actions/productActions.js","helpers/utils.js","redux/actions/cartActions.js","components/ProductHandler.js","components/Home.js","components/Register.js","components/Basket.js","components/Filter.js","components/Products.js","components/PublicHome.js","routes/view.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","filteredItems","error","isLoading","message","undefined","isAuth","users","logged","token","failedLogin","combineReducers","products","state","action","type","payload","adminActions","sort","newProduct","product","data","console","log","newProductUpdate","productToUpdate","findIndex","ele","_id","splice","productSelected","newProducts","productToDelete","cart","cartItems","newUser","user","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","loginAccount","dispatch","options","timeout","method","headers","body","JSON","stringify","name","document","getElementById","value","password","fetch","then","res","json","msg","logOut","postUser","Object","entries","length","Promise","reject","catch","Login","props","getLogin","values","response","history","push","bind","className","initialValues","onSubmit","this","handleSubmit","style","display","flexDirection","justifyContent","marginTop","id","placeholder","to","size","color","loading","Component","connect","ownProps","bindActionCreators","fetchProducts","sortProducts","a","b","price","postProduct","getState","Authorization","updateProduct","setProductOnForm","deleteProduct","code","num","Number","toFixed","toLocaleString","addToCart","slice","productAlreadyInCart","forEach","cp","count","localStorage","setItem","removeFromCart","filter","ProductsHandler","productItems","map","key","href","onClick","src","photo","alt","title","util","Home","find","description","availableSize","border","capturarDatos","Register","email","address","alignItems","margin","Basket","marginLeft","item","float","reduce","c","Filter","onChange","e","target","filteredProducts","Products","PublicHome","Routes","exact","path","component","from","PrivateRoute","rest","render","App","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.963e5ed1.chunk.js","sourcesContent":["import {\r\n  FETCH_PRODUCTS,\r\n  ORDER_PRODUCTS_BY_PRICE,\r\n  ADD_PRODUCT_PENDING,\r\n  ADD_PRODUCT_SUCCESS,\r\n  ADD_PRODUCT_ERROR,\r\n  UPDATE_PRODUCT_PENDING,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_ERROR,\r\n  DELETE_PRODUCT_PENDING,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_ERROR,\r\n  SET_SELECTED_PRODUCT_ID\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  items: [],\r\n  filteredItems: [],\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        filteredItems: action.payload,\r\n        adminActions: false\r\n      }\r\n\r\n    case ORDER_PRODUCTS_BY_PRICE:\r\n      return {\r\n        ...state,\r\n        sort: action.payload.sort,\r\n        items: action.payload.items\r\n      }\r\n\r\n    case ADD_PRODUCT_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      }\r\n\r\n    case ADD_PRODUCT_SUCCESS: {\r\n      const newProduct = action.payload.product.data\r\n      const products = [...state.items, newProduct]\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        items: products\r\n      }\r\n    }\r\n\r\n    case ADD_PRODUCT_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message\r\n      }\r\n\r\n    case UPDATE_PRODUCT_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      }\r\n\r\n    case UPDATE_PRODUCT_SUCCESS: {\r\n      console.log(action.payload)\r\n      const newProductUpdate = [...state.items]\r\n      const productToUpdate = newProductUpdate.findIndex(\r\n        ele => ele._id === action.payload._id\r\n      )\r\n      newProductUpdate.splice(productToUpdate, 1, action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        items: newProductUpdate\r\n      }\r\n    }\r\n\r\n    case UPDATE_PRODUCT_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message\r\n      }\r\n\r\n    case SET_SELECTED_PRODUCT_ID: {\r\n      return {\r\n        ...state,\r\n        productSelected: action.payload\r\n      }\r\n    }\r\n\r\n    case DELETE_PRODUCT_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      }\r\n\r\n    case DELETE_PRODUCT_SUCCESS:\r\n      console.log(action.payload)\r\n      const newProducts = [...state.items]\r\n      const productToDelete = newProducts.findIndex(\r\n        ele => ele._id === action.payload._id\r\n      )\r\n      newProducts.splice(productToDelete, 1)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        items: newProducts\r\n      }\r\n\r\n    case DELETE_PRODUCT_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload.message\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from '../actions/types'\r\n\r\nconst initialState = { items: [] }\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return {\r\n        items: action.payload.cartItems\r\n      }\r\n\r\n    case REMOVE_FROM_CART:\r\n      return {\r\n        items: action.payload.cartItems\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  LOGIN_USER_PENDING,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  IS_AUTH,\r\n  USER_LOGOUT,\r\n  ADD_USER_PENDING,\r\n  ADD_USER_SUCCESS,\r\n  ADD_USER_ERROR,\r\n  FETCH_USERS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  users: [],\r\n  error: null,\r\n  isLoading: false,\r\n  message: undefined,\r\n  logged: false,\r\n  token: '',\r\n  failedLogin: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case IS_AUTH:\r\n      return {\r\n        ...state,\r\n        isAuth: action.payload.isAuth,\r\n        token: action.payload.token\r\n      }\r\n\r\n    case USER_LOGOUT:\r\n      return {\r\n        state: initialState\r\n      }\r\n\r\n    case LOGIN_USER_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        failedLogin: false\r\n      }\r\n\r\n    case LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        token: action.payload.token,\r\n        isAuth: true\r\n      }\r\n\r\n    case LOGIN_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        message: action.payload,\r\n        failedLogin: true\r\n      }\r\n\r\n    case FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      }\r\n\r\n    case ADD_USER_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      }\r\n\r\n    case ADD_USER_SUCCESS: {\r\n      const newUser = action.payload.user\r\n      const user = [...state.users, newUser]\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        users: user\r\n      }\r\n    }\r\n\r\n    case ADD_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        message: action.payload.message\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport productReducer from './productReducer'\r\nimport cartReducer from './cartReducer'\r\nimport loginReducer from './loginReducer'\r\n\r\nexport default combineReducers({\r\n  products: productReducer,\r\n  cart: cartReducer,\r\n  users: loginReducer\r\n})\r\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS'\r\n\r\nexport const ADD_PRODUCT_PENDING = 'ADD_PRODUCT_PENDING'\r\n\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\r\n\r\nexport const ADD_PRODUCT_ERROR = 'ADD_PRODUCT_ERROR'\r\n\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const UPDATE_PRODUCT_PENDING = 'UPDATE_PRODUCT_PENDING'\r\n\r\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\r\n\r\nexport const UPDATE_PRODUCT_ERROR = 'UPDATE_PRODUCT_ERROR'\r\n\r\nexport const SET_SELECTED_PRODUCT_ID = 'SET_SELECTED_PRODUCT_ID'\r\n\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const DELETE_PRODUCT_PENDING = 'DELETE_PRODUCT_PENDING'\r\n\r\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\r\n\r\nexport const DELETE_PRODUCT_ERROR = 'DELETE_PRODUCT_ERROR'\r\n\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const LOGIN_USER_PENDING = 'LOGIN_USER_PENDING'\r\n\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS'\r\n\r\nexport const LOGIN_USER_ERROR = 'LOGIN_USER_ERROR'\r\n\r\nexport const IS_AUTH = 'IS_AUTH'\r\n\r\nexport const FETCH_USERS = 'FETCH_USERS'\r\n\r\nexport const ADD_USER_PENDING = 'ADD_USER_PENDING'\r\n\r\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS'\r\n\r\nexport const ADD_USER_ERROR = 'ADD_USER_ERROR'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const FILTER_PRODUCTS_BY_SIZE = 'FILTER_PRODUCTS_BY_SIZE'\r\n\r\nexport const ORDER_PRODUCTS_BY_PRICE = 'ORDER_PRODUCTS_BY_PRICE'\r\n\r\n///////////////////////////////////////////////////////////////\r\nexport const ADD_TO_CART = 'ADD_TO_CART'\r\n\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'\r\n","import { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  LOGIN_USER_ERROR,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_PENDING,\r\n  IS_AUTH,\r\n  USER_LOGOUT,\r\n  FETCH_USERS,\r\n  ADD_USER_PENDING,\r\n  ADD_USER_SUCCESS,\r\n  ADD_USER_ERROR\r\n} from './types'\r\n\r\n//LOGIN USER ACCOUNT\r\nexport const loginAccount = data => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: LOGIN_USER_PENDING\r\n    })\r\n    const options = {\r\n      timeout: 25000,\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: document.getElementById('inputName').value,\r\n        password: document.getElementById('inputPassword').value\r\n      })\r\n    }\r\n    return fetch('http://localhost:5000/api/user/signIn', options)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.msg !== 'Invalid Email or password') {\r\n          console.log(res)\r\n          return dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: res\r\n          })\r\n        } else {\r\n          return dispatch({\r\n            type: LOGIN_USER_ERROR,\r\n            payload: res.error\r\n          })\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\n//IS AUTH\r\nexport const isAuth = isAuth => {\r\n  return {\r\n    type: IS_AUTH,\r\n    payload: isAuth\r\n  }\r\n}\r\n\r\n//LOGOUT\r\nexport const logOut = dispatch => {\r\n  return {\r\n    type: USER_LOGOUT\r\n  }\r\n}\r\n\r\n//GET USERS\r\nexport const fetchUser = () => dispatch => {\r\n  fetch('http://localhost:5000/api/user/')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      return dispatch({ type: FETCH_USERS, payload: data })\r\n    })\r\n}\r\n\r\n//POST USERS\r\nexport const postUser = user => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: ADD_USER_PENDING\r\n    })\r\n    const options = {\r\n      timeout: 25000,\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n    }\r\n    console.log('options', options)\r\n    return fetch(`http://localhost:5000/api/user`, options)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log('POST USER', data)\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data)\r\n        }\r\n        return dispatch({\r\n          type: ADD_USER_SUCCESS,\r\n          payload: {\r\n            user: data\r\n          }\r\n        })\r\n      })\r\n      .catch(error => {\r\n        return dispatch({\r\n          type: ADD_USER_ERROR,\r\n          payload: error\r\n        })\r\n      })\r\n  }\r\n}\r\n","import '../styles/login.css'\r\nimport React, { Component } from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { connect } from 'react-redux'\r\nimport { loginAccount } from '../redux/actions/loginActions'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { ClipLoader } from 'react-spinners'\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.getLogin = this.getLogin.bind(this)\r\n  }\r\n\r\n  //COMPARE VALUES WITH DATABASE\r\n  getLogin = values => {\r\n    console.log(this.props)\r\n    this.props.loginAccount(values).then(response => {\r\n      console.log(response)\r\n      if (this.props.isAuth) {\r\n        this.props.history.push('/home')\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='login-container'>\r\n        <Formik\r\n          initialValues={{ name: '', password: '' }}\r\n          onSubmit={this.getLogin}\r\n        >\r\n          {({ handleSubmit }) => (\r\n            <Form\r\n              onSubmit={handleSubmit}\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'space-around',\r\n                marginTop: '20px'\r\n              }}\r\n            >\r\n              <div className='Container'>\r\n                <div id='login'>\r\n                  <Field\r\n                    type='text'\r\n                    id='inputName'\r\n                    name='name'\r\n                    placeholder='name'\r\n                  />\r\n                  <Field\r\n                    type='password'\r\n                    id='inputPassword'\r\n                    name='password'\r\n                    placeholder='password'\r\n                  />\r\n                </div>\r\n                <div id='buttonsLoginContainer'>\r\n                  <div className='createAccount'>\r\n                    <Link\r\n                      id='buttonCreateAccount'\r\n                      className='buttonLogin'\r\n                      to='/register'\r\n                    >\r\n                      Create Account\r\n                    </Link>\r\n                  </div>\r\n                  <div className='createAccount'>\r\n                    <Link\r\n                      id='buttonCreateAccount'\r\n                      className='buttonLogin'\r\n                      to='/catalog'\r\n                    >\r\n                      back to catalog\r\n                    </Link>\r\n                  </div>\r\n                  {!this.props.isLoading ? (\r\n                    <button\r\n                      type='submit'\r\n                      id='buttonLogin'\r\n                      className='buttonLogin'\r\n                    >\r\n                      Log In\r\n                    </button>\r\n                  ) : (\r\n                    <ClipLoader size={75} color={'white'} loading />\r\n                  )}\r\n                  <div>\r\n                    {this.props.failedLogin ? (\r\n                      <div id='bad-credentials'>BAD CREDENTIALS</div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    users: state.users,\r\n    isLoading: state.users.isLoading,\r\n    isAuth: state.users.isAuth,\r\n    failedLogin: state.users.failedLogin\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ loginAccount }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","import {\r\n  FETCH_PRODUCTS,\r\n  ORDER_PRODUCTS_BY_PRICE,\r\n  ADD_PRODUCT_PENDING,\r\n  ADD_PRODUCT_SUCCESS,\r\n  ADD_PRODUCT_ERROR,\r\n  UPDATE_PRODUCT_PENDING,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_ERROR,\r\n  DELETE_PRODUCT_PENDING,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_ERROR,\r\n  SET_SELECTED_PRODUCT_ID\r\n} from './types'\r\nimport store from '../store'\r\n\r\n//FETCH PRODUCTS\r\nexport const fetchProducts = () => dispatch => {\r\n  fetch('http://localhost:5000/api/product')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      return dispatch({ type: FETCH_PRODUCTS, payload: data })\r\n    })\r\n}\r\n\r\n//SORT PRODUCTS BY PRICE\r\nexport const sortProducts = (products, sort) => dispatch => {\r\n  const newProduct = [...products]\r\n  console.log(newProduct)\r\n  if (sort !== '') {\r\n    newProduct.sort((a, b) =>\r\n      sort === 'lowestprice'\r\n        ? a.price > b.price\r\n          ? 1\r\n          : -1\r\n        : a.price < b.price\r\n        ? 1\r\n        : -1\r\n    )\r\n  } else {\r\n    newProduct.sort((a, b) => (a.id > b.id ? 1 : -1))\r\n  }\r\n  return dispatch({\r\n    type: ORDER_PRODUCTS_BY_PRICE,\r\n    payload: {\r\n      sort: sort,\r\n      items: newProduct\r\n    }\r\n  })\r\n}\r\n\r\n//POST PRODUCTS\r\nexport const postProduct = product => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: ADD_PRODUCT_PENDING\r\n    })\r\n    const {\r\n      users: { token }\r\n    } = store.getState()\r\n    const options = {\r\n      timeout: 25000,\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `BEARER ${token}`\r\n      },\r\n      body: JSON.stringify(product)\r\n    }\r\n    console.log('options', options)\r\n    return fetch(`http://localhost:5000/api/product`, options)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log('POST PRODUCT', data)\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data)\r\n        }\r\n        return dispatch({\r\n          type: ADD_PRODUCT_SUCCESS,\r\n          payload: {\r\n            product: data\r\n          }\r\n        })\r\n      })\r\n      .catch(error => {\r\n        return dispatch({\r\n          type: ADD_PRODUCT_ERROR,\r\n          payload: error\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\n//UPDATE PRODUCTS\r\nexport const updateProduct = product => {\r\n  console.log(product)\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_PENDING\r\n    })\r\n    const {\r\n      users: { token }\r\n    } = store.getState()\r\n    const options = {\r\n      timeout: 25000,\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `BEARER ${token}`\r\n      },\r\n      body: JSON.stringify({ ...product })\r\n    }\r\n    return fetch(`http://localhost:5000/api/product/${product._id}`, options)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log('UPDATE PRODUCT', data)\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data)\r\n        }\r\n        return dispatch({\r\n          type: UPDATE_PRODUCT_SUCCESS,\r\n          payload: product\r\n        })\r\n      })\r\n      .catch(error => {\r\n        return dispatch({\r\n          type: UPDATE_PRODUCT_ERROR,\r\n          payload: error\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\n//SET PRODUCT\r\nexport const setProductOnForm = _id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_SELECTED_PRODUCT_ID,\r\n      payload: _id\r\n    })\r\n  }\r\n}\r\n\r\n//DELETE THE PRODUCTS\r\nexport const deleteProduct = code => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: DELETE_PRODUCT_PENDING\r\n    })\r\n    const {\r\n      users: { token }\r\n    } = store.getState()\r\n    const options = {\r\n      timeout: 25000,\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `BEARER ${token}`\r\n      }\r\n    }\r\n    return fetch(`http://localhost:5000/api/product/${code}`, options)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log('DELETE PRODUCT', data)\r\n        if (!Object.entries(data).length) {\r\n          return Promise.reject(data)\r\n        }\r\n        return dispatch({\r\n          type: DELETE_PRODUCT_SUCCESS,\r\n          payload: data\r\n        })\r\n      })\r\n      .catch(error => {\r\n        return dispatch({\r\n          type: DELETE_PRODUCT_ERROR,\r\n          payload: error\r\n        })\r\n      })\r\n  }\r\n}\r\n","export default {\r\n  formatCurrency: function(num) {\r\n    return '$' + Number(num.toFixed(1)).toLocaleString() + ' '\r\n  }\r\n}\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from './types'\r\n\r\n//ADD TO CART METHOD\r\nexport const addToCart = (items, product) => dispatch => {\r\n  const cartItems = items.slice()\r\n  let productAlreadyInCart = false\r\n  cartItems.forEach(cp => {\r\n    if (cp._id === product._id) {\r\n      cp.count += 1\r\n      productAlreadyInCart = true\r\n    }\r\n  })\r\n  if (!productAlreadyInCart) {\r\n    cartItems.push({ ...product, count: 1 })\r\n  }\r\n  localStorage.setItem('cartItems', JSON.stringify(cartItems))\r\n  return dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: {\r\n      cartItems\r\n    }\r\n  })\r\n}\r\n\r\n//REMOVE FROM CART METHOD\r\nexport const removeFromCart = (items, product) => dispatch => {\r\n  const cartItems = items.slice().filter(a => a._id !== product._id)\r\n  localStorage.setItem('cartItems', JSON.stringify(cartItems))\r\n  return dispatch({\r\n    type: REMOVE_FROM_CART,\r\n    payload: {\r\n      cartItems\r\n    }\r\n  })\r\n}\r\n","import React, { Component } from 'react'\r\nimport util from '../helpers/utils'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {\r\n  fetchProducts,\r\n  deleteProduct,\r\n  setProductOnForm\r\n} from '../redux/actions/productActions'\r\nimport { addToCart } from '../redux/actions/cartActions'\r\n\r\nclass ProductsHandler extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchProducts()\r\n  }\r\n\r\n  render() {\r\n    const productItems = this.props.products.map(product => (\r\n      <div className='col-md-4' key={product._id}>\r\n        <div className='thumbnail text-center'>\r\n          <a\r\n            href={`#${product._id}`}\r\n            onClick={() => this.props.addToCart(this.props.cartItems, product)}\r\n          >\r\n            <img src={product.photo} alt='photo' />\r\n            <p>{product.title}</p>\r\n          </a>\r\n          <b>{util.formatCurrency(product.price)}</b>\r\n          <button\r\n            className='btn btn-danger btn-xs'\r\n            onClick={() => this.props.deleteProduct(product._id)}\r\n          >\r\n            Delete Product\r\n          </button>\r\n          <button\r\n            className='btn-update'\r\n            onClick={() => this.props.setProductOnForm(product._id)}\r\n          >\r\n            Update Product\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ))\r\n    return <div className='row'>{productItems}</div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.products.items,\r\n  cartItems: state.cart.items\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    { fetchProducts, addToCart, deleteProduct, setProductOnForm },\r\n    dispatch\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsHandler)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { postProduct, updateProduct } from '../redux/actions/productActions'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { Link } from 'react-router-dom'\r\nimport { isAuth, logOut } from '../redux/actions/loginActions'\r\nimport ProductsHandler from '../components/ProductHandler'\r\n\r\nclass Home extends Component {\r\n  capturarDatos() {\r\n    console.log('ENTRO AL CAPTURA')\r\n    const productToUpdate = this.props.products.find(\r\n      product => product._id === this.props.productSelected\r\n    )\r\n    return {\r\n      title: productToUpdate.title,\r\n      description: productToUpdate.description,\r\n      availableSize: productToUpdate.availableSize,\r\n      price: productToUpdate.price\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <h1>---Admin panel---</h1>\r\n        {this.props.isAuth ? (\r\n          <div className='logged'>\r\n            <div>Admin session</div>\r\n            <div className='buttonmenu'>\r\n              <Link to='/login' onClick={this.props.logOut}>\r\n                Logout\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div id='login2'>\r\n            <div className='buttonmenu'>\r\n              <Link to='/register'>Sign up</Link>\r\n            </div>\r\n            <div className='buttonmenu'>\r\n              <Link to='/login'>Login</Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <hr />\r\n        <div className='row'>\r\n          <div>\r\n            <h4>Add new product ↓</h4>\r\n            <div className='form-container'>\r\n              <Formik\r\n                initialValues={{\r\n                  id: '',\r\n                  photo: 'https://via.placeholder.com/150',\r\n                  title: '',\r\n                  description: '',\r\n                  availableSize: '',\r\n                  price: 0\r\n                }}\r\n                onSubmit={values => {\r\n                  this.props.postProduct(values)\r\n                }}\r\n              >\r\n                {({ handleSubmit }) => (\r\n                  <Form \r\n                    onSubmit={handleSubmit}\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      justifyContent: 'space-around',\r\n                      marginTop: '20px',\r\n                      border: '2px solid'\r\n                    }}\r\n                  >\r\n                    <Field type='text' name='id' placeholder='code' />\r\n                    <Field type='text' name='title' placeholder='tittle' />\r\n                    <Field\r\n                      type='text'\r\n                      name='description'\r\n                      placeholder='description'\r\n                    />\r\n                    <Field\r\n                      type='text'\r\n                      name='availableSize'\r\n                      placeholder='availableSize'\r\n                    />\r\n                    <Field type='number' name='price' placeholder='price' />\r\n                    <button type='submit'>Submit</button>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-8'>\r\n            <ProductsHandler />\r\n          </div>\r\n          <div className='col-md-4'>\r\n            <h4>Update product</h4>\r\n            <Formik\r\n              initialValues={\r\n                !this.props.productSelected\r\n                  ? {\r\n                      title: '',\r\n                      photo: 'https://via.placeholder.com/150',\r\n                      description: '',\r\n                      availableSize: '',\r\n                      price: 0\r\n                    }\r\n                  : this.capturarDatos()\r\n              }\r\n              onSubmit={values => {\r\n                this.props.updateProduct({\r\n                  ...values,\r\n                  _id: this.props.productSelected\r\n                })\r\n              }}\r\n            >\r\n              {({ handleSubmit }) => (\r\n                <Form\r\n                  onSubmit={handleSubmit}\r\n                  style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'space-around',\r\n                    marginTop: '40px',\r\n                    border: '2px solid'\r\n                  }}\r\n                >\r\n                  <Field type='text' name='title' placeholder='tittle' />\r\n                  <Field\r\n                    type='text'\r\n                    name='description'\r\n                    placeholder='description'\r\n                  />\r\n                  <Field\r\n                    type='text'\r\n                    name='availableSize'\r\n                    placeholder='availableSize'\r\n                  />\r\n                  <Field type='number' name='price' placeholder='price' />\r\n                  <button type='submit'>Submit</button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.products.items,\r\n    isLoading: state.isLoading,\r\n    isAuth: state.isAuth,\r\n    productSelected: state.products.productSelected\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    { postProduct, updateProduct, isAuth, logOut },\r\n    dispatch\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import '../styles/register.css'\r\nimport React, { Component } from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { Link } from 'react-router-dom'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { postUser } from '../redux/actions/loginActions'\r\n\r\nclass Register extends Component {\r\n  render() {\r\n    return (\r\n      <div className='wrapper'>\r\n        <div className='register-container'>\r\n          <div className='top'>\r\n            <h2>\r\n              WELCOME TO THE REGISTER, COMPLETE THE FIELDS BELOW TO CREATE USER\r\n            </h2>\r\n          </div>\r\n          <Formik\r\n            initialValues={{ name: '', email: '', password: '', address: '' }}\r\n            onSubmit={values => {\r\n              this.props.postUser(values)\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <Form\r\n                onSubmit={handleSubmit}\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  marginTop: '20px'\r\n                }}\r\n              >\r\n                <Field\r\n                  type='text'\r\n                  name='name'\r\n                  id='inputUser'\r\n                  placeholder='name'\r\n                  style={{ margin: '15px' }}\r\n                />\r\n                <Field\r\n                  type='text'\r\n                  name='email'\r\n                  id='inputEmail'\r\n                  placeholder='email'\r\n                  style={{ margin: '15px' }}\r\n                />\r\n                <Field\r\n                  type='password'\r\n                  name='password'\r\n                  id='inputPassword'\r\n                  placeholder='password'\r\n                  style={{ margin: '15px' }}\r\n                />\r\n                <Field\r\n                  type='text'\r\n                  name='address'\r\n                  id='inputAddress'\r\n                  placeholder='address'\r\n                  style={{ margin: '15px' }}\r\n                />\r\n                <button id='submitButton' type='submit'>\r\n                  Submit\r\n                </button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n          <div id='container-back-to-login'>\r\n            <Link id='back-to-login' to='/login'>\r\n              Back to Login\r\n            </Link>\r\n            <Link id='back-to-login' to='/catalog'>\r\n              Back to Catalog\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.users,\r\n  isLoading: state.isLoading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ postUser }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\r\n","import React, { Component } from 'react'\r\nimport util from '../helpers/utils'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { removeFromCart } from '../redux/actions/cartActions'\r\n\r\nclass Basket extends Component {\r\n  render() {\r\n    const { cartItems } = this.props\r\n    return (\r\n      <div className='alert alert-info'>\r\n        {cartItems.length === 0 ? (\r\n          'Basket is empty'\r\n        ) : (\r\n          <div>you have {cartItems.length} products in the basket</div>\r\n        )}\r\n        {cartItems.length > 0 && (\r\n          <div>\r\n            <ul style={{ marginLeft: -25 }}>\r\n              {cartItems.map(item => (\r\n                <li key={item.id}>\r\n                  <b>{item.title}</b>\r\n                  <button\r\n                    style={{ float: 'right' }}\r\n                    className='btn btn-danger btn-xs'\r\n                    onClick={() =>\r\n                      this.props.removeFromCart(this.props.cartItems, item)\r\n                    }\r\n                  >\r\n                    X\r\n                  </button>\r\n                  <br />\r\n                  {item.count} X {util.formatCurrency(item.price)}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <b>\r\n              Sum:{' '}\r\n              {util.formatCurrency(\r\n                cartItems.reduce((a, c) => a + c.price * c.count, 0)\r\n              )}\r\n            </b>\r\n            <button className='btn btn-primary'>checkout</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cartItems: state.cart.items\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ removeFromCart }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Basket)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { sortProducts } from '../redux/actions/productActions'\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <div className='row'>\r\n        <div className='col-md-4'>\r\n          {`${this.props.products.length} products found.`}\r\n        </div>\r\n        <div className='col-md-4'>\r\n          <label>\r\n            Order by\r\n            <select\r\n              className='form-control'\r\n              value={this.props.sort}\r\n              onChange={e =>\r\n                this.props.sortProducts(this.props.products, e.target.value)\r\n              }\r\n            >\r\n              <option value=''>Price</option>\r\n              <option value='lowestprice'>Lowest to highest</option>\r\n              <option value='highestprice'>Highest to lowest</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.products.items,\r\n  filteredProducts: state.products.filteredItems,\r\n  sort: state.products.sort\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ sortProducts }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import React, { Component } from 'react'\r\nimport util from '../helpers/utils'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { fetchProducts } from '../redux/actions/productActions'\r\nimport { addToCart } from '../redux/actions/cartActions'\r\n\r\nclass Products extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchProducts()\r\n  }\r\n\r\n  render() {\r\n    const productItems = this.props.products.map(product => (\r\n      <div className='col-md-4' key={product._id}>\r\n        <div className='thumbnail text-center'>\r\n          <a\r\n            href={`#${product._id}`}\r\n            onClick={() => this.props.addToCart(this.props.cartItems, product)}\r\n          >\r\n            <img src={product.photo} alt='photo' />\r\n            <p>{product.title}</p>\r\n          </a>\r\n          <b>{util.formatCurrency(product.price)}</b>\r\n          <button\r\n            className='btn btn-primary'\r\n            onClick={() => this.props.addToCart(this.props.cartItems, product)}\r\n          >\r\n            Add to cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ))\r\n    return <div className='row'>{productItems}</div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.products.items,\r\n  cartItems: state.cart.items\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ addToCart, fetchProducts }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products)\r\n","import React, { Component } from 'react'\r\nimport Basket from '../components/Basket'\r\nimport Filter from '../components/Filter'\r\nimport Products from './Products'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass PublicHome extends Component {\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <h1>---Welcome to t-shirts store!---</h1>\r\n        <div id='login2'>\r\n          <div className='buttonmenu'>\r\n            <Link to='/register'>Sign up</Link>\r\n          </div>\r\n          <div className='buttonmenu'>\r\n            <Link to='/login'>Login</Link>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className='row'>\r\n          <div className='col-md-8'>\r\n            <Filter />\r\n            <Products />\r\n          </div>\r\n          <div className='col-md-4'>\r\n            <Basket />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.products,\r\n    isLoading: state.isLoading,\r\n    isAuth: state.isAuth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PublicHome)\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Login from '../components/Login'\r\nimport Home from '../components/Home'\r\nimport Register from '../components/Register'\r\nimport PublicHome from '../components/PublicHome'\r\nimport store from '../redux/store'\r\n\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <PrivateRoute exact path='/home' component={Home} />\r\n          <Route exact path='/catalog' component={PublicHome} />\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='/register' component={Register} />\r\n          <Redirect from='/' to='/catalog' />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      store.getState().users.token ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to='/' />\r\n      )\r\n    }\r\n  />\r\n)\r\n\r\nexport default connect()(Routes)\r\n","import React, { Component } from 'react'\r\nimport './App.css'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport Routes from './routes/view'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Routes />\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}